#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        del {
            bindings = <&kp DELETE>;
            key-positions = <19 20>;
        };

        bs {
            bindings = <&kp LS(BACKSPACE)>;
            key-positions = <18 19>;
        };

        mb1 {
            bindings = <&mkp MB1>;
            key-positions = <12 13>;
        };

        mb2 {
            bindings = <&mkp MB2>;
            key-positions = <2 3>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <12 11>;
        };

        dot {
            bindings = <&kp PERIOD>;
            key-positions = <6 7>;
        };

        home {
            bindings = <&kp HOME>;
            key-positions = <30 31>;
        };

        end {
            bindings = <&kp END>;
            key-positions = <31 32>;
        };

        ctrlX {
            bindings = <&kp LC(X)>;
            key-positions = <23 22>;
        };

        crtlC {
            bindings = <&kp LC(C)>;
            key-positions = <23 24>;
        };

        ctrlV {
            bindings = <&kp LC(V)>;
            key-positions = <24 25>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <7 8>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        alt_D_Enter: alt_D_Enter {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT &kp D &kp ENTER>,
                <&macro_release>,
                <&kp LEFT_ALT &kp D &kp ENTER>;

            label = "ALT_D_ENTER";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kp W         &kp E         &kp R         &kp T                                                  &kp Y      &kp U                      &kp I            &kp O                 &kp P
&mt LCTRL A  &lt 1 S       &lt 2 D       &lt 3 F       &lt 5 G      &kp LG(C_MUTE)      &kp LANGUAGE_1        &kp H      &kp J                      &lt 4 K          &lt 5 L               &mt RCTRL ENTER
&mt LSHFT Z  &kp X         &kp C         &kp V         &kp B        &mo 4               &kp LC(Z)             &kp N      &mt LS(INTERNATIONAL_1) M  &mt MINUS COMMA  &mt LS(SLASH) PERIOD  &mt RIGHT_SHIFT FSLH
&kp LSHFT    &kp LEFT_GUI  &kp LEFT_GUI  &kp LEFT_ALT  &lt 5 SPACE  &mkp MB1            &mt RCTRL LANGUAGE_2  &kp SPACE                                                                    &kp ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        FUNCTION {
            bindings = <
&trans  &kp F7  &kp F8  &kp F9  &kp F10                          &mt SEMI APOS     &kp AMPERSAND     &kp LS(N8)        &kp LS(N9)        &kp EQUAL
&trans  &kp F4  &kp F5  &kp F6  &kp F11  &trans      &trans      &kp BACKSPACE     &kp LS(NUMBER_4)  &kp PERCENT       &kp LS(NUMBER_6)  &trans
&trans  &kp F1  &kp F2  &kp F3  &kp F12  &trans      &trans      &kp LEFT_BRACKET  &kp EXCLAMATION   &kp LS(NUMBER_2)  &kp HASH          &trans
&trans  &trans  &trans  &trans  &trans   &trans      &kp DELETE  &kp BACKSPACE                                                           &trans
            >;

            sensor-bindings = <&inc_dec_kp DOWN_ARROW UP_ARROW>;
        };

        NUM {
            bindings = <
&trans  &trans          &kp UP_ARROW    &trans           &kp LS(MINUS)                          &kp INTERNATIONAL_3  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
&trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans         &trans      &to 0       &kp BACKSPACE        &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans
&trans  &trans          &trans          &trans           &trans         &trans      &trans      &kp PERIOD           &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans
&trans  &trans          &trans          &trans           &trans         &trans      &kp DELETE  &kp BACKSPACE                                                  &trans
            >;
        };

        ARROW {
            bindings = <
&trans  &trans               &trans                 &trans  &trans                          &trans         &kp HOME        &kp UP_ARROW    &kp END          &trans
&trans  &kp HOME             &kp END                &trans  &trans  &trans      &trans      &kp BACKSPACE  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&trans  &kp LC(LS(PAGE_UP))  &kp LC(LS(PAGE_DOWN))  &trans  &trans  &trans      &trans      &trans         &kp F2          &kp F7          &kp F10          &trans
&trans  &trans               &trans                 &trans  &trans  &trans      &kp DELETE  &kp BACKSPACE                                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &kp LC(W)           &kp LC(E)    &kp LC(R)  &mt LC(LS(T)) LC(T)                          &trans         &trans    &kp LS(NUMBER_8)   &kp LS(NUMBER_9)  &trans
&trans  &kp LA(LEFT_ARROW)  &mkp MB1     &mkp MB2   &kp LA(RIGHT_ARROW)  &trans      &trans      &kp BACKSPACE  &mkp MB1  &trans             &trans            &trans
&trans  &kp LC(LS(TAB))     &kp LC(TAB)  &kp LC(N)  &alt_D_Enter         &trans      &trans      &trans         &mkp MB2  &kp RIGHT_BRACKET  &kp BACKSLASH     &trans
&trans  &trans              &trans       &trans     &trans               &trans      &kp DELETE  &kp BACKSPACE                                                 &trans
            >;

            sensor-bindings = <&inc_dec_kp DOWN_ARROW UP_ARROW>;
        };

        SCROLL {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2       &kp NUMBER_3      &kp NUMBER_4   &kp NUMBER_5                              &kp NUMBER_6      &kp NUMBER_7    &mt NUMBER_8 UP_ARROW  &kp NUMBER_9     &kp NUMBER_0
&trans        &kp LS(NUMBER_8)   &kp LS(NUMBER_9)  &kp MINUS      &kp LS(SEMI)  &kp LC(N0)      &trans      &kp BACKSPACE     &kp LEFT_ARROW  &kp DOWN_ARROW         &kp RIGHT_ARROW  &trans
&trans        &kp RIGHT_BRACKET  &kp BACKSLASH     &kp LS(MINUS)  &kp LS(SQT)   &kp END         &kp HOME    &kp LEFT_BRACKET  &kp F2          &kp F7                 &kp F10          &trans
&trans        &trans             &trans            &trans         &trans        &trans          &kp DELETE  &kp BACKSPACE                                                             &trans
            >;
        };
    };
};
