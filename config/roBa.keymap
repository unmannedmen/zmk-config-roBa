#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        alt_D_Enter: alt_D_Enter {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT &kp D &kp ENTER>,
                <&macro_release>,
                <&kp LEFT_ALT &kp D &kp ENTER>;

            label = "ALT_D_ENTER";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R            &mt TAB T                                                         &kp Y               &kp U  &kp I            &kp O                 &kp P
&mt LCTRL A       &lt 1 S       &lt 3 D       &lt 2 F          &lt 5 G      &kp LG(C_MUTE)                 &to 2                 &kp H               &kp J  &lt 4 K          &lt 5 L               &mt RCTRL ENTER
&mt LEFT_SHIFT Z  &mt LC(X) X   &mt LC(C) C   &kp V            &kp B        &mt LANGUAGE_1 LANGUAGE_2      &kp MINUS             &kp N               &kp M  &mt MINUS COMMA  &mt LS(SLASH) PERIOD  &mt RIGHT_SHIFT FSLH
&lt 3 BACKSPACE   &kp LEFT_GUI  &kp LEFT_ALT  &mt LS(TAB) TAB  &lt 4 SPACE  &mkp MB1                       &mt DELETE BACKSPACE  &mt LEFT_GUI SPACE                                                &kp ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &kp LEFT_BRACKET  &kp AMPERSAND     &kp LS(N8)        &kp LS(N9)        &kp LS(UNDERSCORE)
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp SINGLE_QUOTE  &kp LS(NUMBER_4)  &kp PERCENT       &kp LS(NUMBER_6)  &kp RIGHT_BRACKET
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp SEMI          &kp EXCLAMATION   &kp LS(NUMBER_2)  &kp HASH          &kp BACKSLASH
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp DOWN_ARROW UP_ARROW>;
        };

        NUM {
            bindings = <
&kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans                         &mt LS(EQUAL) RS(UNDER)     &kp NUMBER_7  &mt LS(NUMBER_8) NUMBER_8   &mt LS(NUMBER_9) NUMBER_9  &kp NUMBER_0
&trans          &trans          &trans        &trans           &trans  &kp LG(Z)      &to 0   &mt LS(MINUS) LS(SEMI)      &kp NUMBER_4  &kp NUMBER_5                &kp NUMBER_6               &trans
&trans          &trans          &trans        &trans           &trans  &trans         &kp F2  &mt SLASH LS(SINGLE_QUOTE)  &kp NUMBER_1  &mt RIGHT_BRACKET NUMBER_2  &mt BACKSLASH NUMBER_3     &kp PERIOD
&trans          &trans          &trans        &trans           &trans  &trans         &trans  &trans                                                                                           &trans
            >;
        };

        ARROW {
            bindings = <
&trans  &trans  &trans  &trans  &trans                              &trans         &kp HOME        &kp UP_ARROW    &kp END          &kp TAB
&trans  &trans  &trans  &trans  &trans      &trans      &trans      &kp BACKSPACE  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PAGE_UP
&trans  &trans  &trans  &trans  &trans      &trans      &trans      &trans         &kp F2          &kp F7          &kp F10          &kp PAGE_DOWN
&trans  &trans  &trans  &trans  &kp DELETE  &trans      &kp DELETE  &kp BACKSPACE                                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&kp RS(RC(SEMI))  &kp LC(W)            &kp LC(E)              &kp LC(R)  &mt LC(LS(T)) LC(T)                      &trans              &trans    &trans               &trans                 &trans
&kp LC(LS(TAB))   &kp LC(TAB)          &mkp MB2               &mkp MB1   &kp LA(LEFT_ARROW)   &trans      &trans  &kp LA(LEFT_ARROW)  &mkp MB1  &trans               &trans                 &kp LC(TAB)
&kp LC(MINUS)     &kp LC(LS(PAGE_UP))  &kp LC(LS(PAGE_DOWN))  &kp LC(N)  &alt_D_Enter         &trans      &trans  &trans              &mkp MB2  &kp LC(LS(PAGE_UP))  &kp LC(LS(PAGE_DOWN))  &kp LC(LS(TAB))
&kp LC(N0)        &trans               &trans                 &trans     &trans               &trans      &trans  &trans                                                                    &alt_D_Enter
            >;

            sensor-bindings = <&inc_dec_kp DOWN_ARROW UP_ARROW>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                          &trans  &kp F7  &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &kp LC(N0)      &trans  &trans  &kp F4  &kp F5  &kp F6  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &kp F1  &kp F2  &kp F3  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans                          &kp F12
            >;
        };
    };
};
